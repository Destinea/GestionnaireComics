/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package AffichageCollection;

import API.Comic;
import API.api_connection;
import Collec.Comic_Collec;
import User.User;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import prinfo.AffichageDetailsComic;
import javax.swing.SwingConstants;

/**
 *
 * @author Alexi
 */
public class ComicPanelCollection extends javax.swing.JPanel {
    private  User user;
    private Comic_Collec comic;
    /**
     * Creates new form ComicPanelCollection
     * @param user
     * @param c
     */
    public ComicPanelCollection(User user,Comic_Collec c) {
        initComponents();
        this.user=user;
        this.comic=c;
        InitComicPanelCollection();
    }
    
    public void InitComicPanelCollection(){
        box_lu.setVisible(true);
        box_possede.setVisible(true);
        titre.setText(this.comic.getName());
        ImageIcon img = null;
        try {
            img = new ImageIcon(new URL(comic.getIconLink()));
        } catch (Exception ex) {
            Logger.getLogger(ComicPanelCollection.class.getName()).log(Level.SEVERE, null, ex);
        }
        iconLink.setIcon(img);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titre = new javax.swing.JLabel();
        iconLink = new javax.swing.JLabel();
        box_lu = new javax.swing.JCheckBox();
        box_possede = new javax.swing.JCheckBox();
        box_souhait = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(51, 51, 51));
        setPreferredSize(new java.awt.Dimension(127, 212));

        titre.setBackground(new java.awt.Color(51, 51, 51));
        titre.setForeground(new java.awt.Color(255, 255, 255));
        titre.setHorizontalAlignment(SwingConstants.LEFT);
        titre.setText("nom");
        titre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        iconLink.setBackground(new java.awt.Color(51, 51, 51));
        iconLink.setHorizontalAlignment(SwingConstants.LEFT);
        iconLink.setHorizontalTextPosition(SwingConstants.LEFT);
        iconLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconLinkMouseClicked(evt);
            }
        });

        box_lu.setBackground(new java.awt.Color(51, 51, 51));
        box_lu.setForeground(new java.awt.Color(255, 255, 255));
        box_lu.setText("Lu");
        box_lu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_luActionPerformed(evt);
            }
        });

        box_possede.setBackground(new java.awt.Color(51, 51, 51));
        box_possede.setForeground(new java.awt.Color(255, 255, 255));
        box_possede.setText("Possédé");
        box_possede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_possedeActionPerformed(evt);
            }
        });

        box_souhait.setBackground(new java.awt.Color(51, 51, 51));
        box_souhait.setForeground(new java.awt.Color(255, 255, 255));
        box_souhait.setText("Souhait");
        box_souhait.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_souhaitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(iconLink, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(box_souhait, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(box_possede, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(box_lu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(titre, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iconLink, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(box_souhait)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(box_lu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(box_possede)
                .addGap(6, 6, 6))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void iconLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconLinkMouseClicked
        if (evt.getClickCount() == 2 && evt.getButton() == java.awt.event.MouseEvent.BUTTON1) {
            try {
                api_connection apiConnection = new api_connection();
                AffichageDetailsComic affichageDetailsComic =
                        new AffichageDetailsComic(apiConnection.getComic(this.comic.getId()));
                affichageDetailsComic.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(ComicPanelCollection.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_iconLinkMouseClicked

    private void box_luActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_luActionPerformed
        //Modifier état de lecture dans user.collection
        
    }//GEN-LAST:event_box_luActionPerformed

    private void box_possedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_possedeActionPerformed
        //Modifier état de lecture user.collection
    }//GEN-LAST:event_box_possedeActionPerformed

    private void box_souhaitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_souhaitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_souhaitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox box_lu;
    private javax.swing.JCheckBox box_possede;
    private javax.swing.JCheckBox box_souhait;
    private javax.swing.JLabel iconLink;
    private javax.swing.JLabel titre;
    // End of variables declaration//GEN-END:variables
}
