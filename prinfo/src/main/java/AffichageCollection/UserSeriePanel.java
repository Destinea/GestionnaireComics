/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package AffichageCollection;

import AffichagePrincipal.FenetrePrincipale;
import Collec.Comic_Collec;
import Collec.User_serie;
import GestionUser.User;

import java.awt.*;
import java.util.ArrayList;

/**
 *
 * @author alexi
 * Panel Contenant des panels de comics associés a une User serie
 */
public class UserSeriePanel extends javax.swing.JPanel {
    private User user;
    private User_serie serie;
    private ArrayList<ComicPanelCollection> comic_panels; 
    private FenetrePrincipale fp;
    private int page=0;
    /**
     * Creates new form UserSeriePanel
     */
    public UserSeriePanel(User user,User_serie serie,FenetrePrincipale f) {
        initComponents();
        this.user=user;
        this.serie=serie;
        this.comic_panels= new ArrayList<>();
        setLayout(null);
        add(afficherGauche);
        add(contentpageserie);
        add(afficherDroite);
        add(nomSerie);
        fp=f;
        InitUserSeriePanelCollection();
    }
    
    /**
     * @return User_serie associée au panel
     */
    public User_serie getPanelSerie() {
    	return this.serie;
    }
    public void InitUserSeriePanelCollection(){
        
        contentpageserie.setLayout(new FlowLayout(FlowLayout.LEADING));
        
        //Creation de tous les comic panel
        for (Comic_Collec comic : serie.getUserSerie()) {//MOdifier pour avoir la serie possédée
            comic_panels.add(new ComicPanelCollection(this.user,comic,this));
        }
        nomSerie.setText(serie.getName()+" : "+comic_panels.size()+" / "+serie.getNumberOfComics());
        //refresh du panel = initialisation
        refreshPanel();
        
    }
    
    /**
     * Refresh du panel après modification de celui çi
     */
    public void refreshPanel() {
    	//Supression de tout l'affichage
    	contentpageserie.removeAll();
    	//Ajout des Comic Panel souhaités
    	int i=0;
        for (ComicPanelCollection comicPanelCollection : comic_panels) {
        	if (i>=page && i<page+7) {
				contentpageserie.add(comicPanelCollection);
			}
        	i++;
		}
        //bouton de droite si il y a des comics après
        if (i>page+7) {
            afficherDroite.setVisible(true);
        }
        else {
        	afficherDroite.setVisible(false);
        }
        //bouton de gauche si on est pas a la premiere page
        if (page>0) {
        	afficherGauche.setVisible(true);
		} else {
			afficherGauche.setVisible(false);
		}
        //refresh
        contentpageserie.revalidate();
        contentpageserie.repaint();
	}
    
    /**
     * Supression d'un comic de la collection et du panel
     */
    public void deleteComic(ComicPanelCollection cm) {
    	//Supp dans la serie de Comic panel
    	comic_panels.remove(cm);
    	nomSerie.setText(serie.getName()+" : "+comic_panels.size()+" / "+serie.getNumberOfComics());
    	//Refresh du panel
    	refreshPanel();
		//Delete panel serie si vide
		if (comic_panels.size()<1) {
			fp.deleteSeriePanel(this);
		}
	}
    
    /**
     * Affiche les comics suivants dans la User_serie
     */
    private void afficherGaucheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afficherGaucheActionPerformed
    	page-=7;
    	refreshPanel();
    	
    }//GEN-LAST:event_afficherGaucheActionPerformed

    /**
     * Affiche les comics precedents dans la User_serie
     */
    private void afficherDroiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afficherDroiteActionPerformed
    	page+=7;
    	refreshPanel();
    	
    	
    }//GEN-LAST:event_afficherDroiteActionPerformed
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        afficherGauche = new javax.swing.JButton();
        afficherGauche.setBounds(0, 19, 39, 204);
        afficherDroite = new javax.swing.JButton();
        afficherDroite.setBounds(967, 19, 39, 204);
        nomSerie = new javax.swing.JLabel();
        nomSerie.setBounds(0, 0, 1006, 18);
        contentpageserie = new javax.swing.JPanel();
        contentpageserie.setBounds(41, 19, 926, 204);

        setBackground(new Color(99, 99, 99));
        setMaximumSize(new Dimension(977, 223));
        setPreferredSize(new Dimension(1006, 233));
        afficherGauche.setBackground(new java.awt.Color(153, 153, 153));
        afficherGauche.setForeground(new Color(0, 0, 0));
        afficherGauche.setText("<");
        afficherGauche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afficherGaucheActionPerformed(evt);
            }
        });

        afficherDroite.setBackground(new java.awt.Color(153, 153, 153));
        afficherDroite.setForeground(new Color(0, 0, 0));
        afficherDroite.setText(">");
        afficherDroite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afficherDroiteActionPerformed(evt);
            }
        });

        nomSerie.setBackground(new Color(99, 99, 99));
        nomSerie.setForeground(new java.awt.Color(255, 255, 255));
        nomSerie.setText("NomSerie");

        contentpageserie.setBackground(new Color(99, 99, 99));

        javax.swing.GroupLayout contentpageserieLayout = new javax.swing.GroupLayout(contentpageserie);
        contentpageserie.setLayout(contentpageserieLayout);
        contentpageserieLayout.setHorizontalGroup(
            contentpageserieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 981, Short.MAX_VALUE)
        );
        contentpageserieLayout.setVerticalGroup(
            contentpageserieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton afficherDroite;
    private javax.swing.JButton afficherGauche;
    private javax.swing.JPanel contentpageserie;
    private javax.swing.JLabel nomSerie;
    // End of variables declaration//GEN-END:variables
}
